0-0: Fish, fiddle-de-dee
0-1> (load "imp.lavender")
eval-stmt eval-rhs list-assign
0-1: "imp.lavender"
0-2> (load "microkanren.lavender")
run
0-2: "microkanren.lavender"
0-3> ((delta (e r k f) (begin (f eval-stmt) (meaning e r k f))) show-state)
0-3: ()
0-4> (a = (40 + 2))
0-4: ()
0-5> (b = (20 + 4))
0-5: ()
0-6> (show-state)
0-6: ((b 24) (a 42))
0-7> (if (a < b) then (c = 42) else (c = 24))
0-7: ()
0-8> (show-state)
0-8: ((c 24) (b 24) (a 42))
0-9> (lavender (delta (e r k f) (begin (set! eval-bool (list-assign run)) (meaning e r k f))) show-state)
0-9: ((c 24) (b 24) (a 42))
0-10> (if ((e f g) := (conj (= e 10) (= f e) (= g 42))) then (h = f) else (h = g))
0-10: ()
0-11> (show-state)
((h 10) (g 42) (f 10) (e 10) (c 24) (b 24) (a 42))
0-12>
