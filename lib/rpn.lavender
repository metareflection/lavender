(common-define binop
  (lambda (op stk)
    (cons (op (car stk) (cadr stk)) (cddr stk))))
(common-define rpn-h
  (lambda (lst stk)
    (if (null? lst) stk
	(case (car lst)
	  ((+)
	   (if (<= 2 (length stk))
	       (rpn-h (cdr lst) (binop + stk))
	       (list 'rpn-error "not enough arguments" stk)))
	  ((-)
	   (if (<= 2 (length stk))
	       (rpn-h (cdr lst) (binop - stk))
	       (list 'rpn-error "not enough arguments" stk)))
	  ((*)
	   (if (<= 2 (length stk))
	       (rpn-h (cdr lst) (binop * stk))
	       (list 'rpn-error "not enough arguments" stk)))
	  ((/)
	   (if (<= 2 (length stk))
	       (rpn-h (cdr lst) (binop / stk))
	       (list 'rpn-error "not enough arguments" stk)))
	  (else (if (number? (car lst))
		    (rpn-h (cdr lst) (cons (car lst) stk))
		    (list 'error)))))))
(common-define rpn (lambda (lst) (rpn-h lst '())))
